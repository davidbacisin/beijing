<configuration>
  <system.webServer>
    <handlers>
      <!-- Indicates that the index.js file is a node.js site to be handled by the iisnode module -->
      <add name="iisnode" path="server.js" verb="*" modules="iisnode" />
    </handlers>
	
    <rewrite>
      <rules>
        <rule name="NodeServer">
          <!-- Send everything through server.js -->
          <action type="Rewrite" url="server.js" />
        </rule>
      </rules>
    </rewrite>

    <!-- 'bin' directory has no special meaning in node.js and apps can be placed in it -->
    <security>
      <requestFiltering>
        <hiddenSegments>
          <remove segment="bin" />
        </hiddenSegments>
      </requestFiltering>
    </security>

    <!-- Make sure error responses are left untouched -->
    <httpErrors existingResponse="PassThrough" />
	
	<httpProtocol>
		<customHeaders>
			<remove name="X-Powered-By" />
		</customHeaders>
	</httpProtocol>

    <!--
      You can control how Node is hosted within IIS using the following options:
        * watchedFiles: semi-colon separated list of files that will be watched for changes to restart the server
        * node_env: will be propagated to node as NODE_ENV environment variable
        * debuggingEnabled - controls whether the built-in debugger is enabled

      See https://github.com/tjanczuk/iisnode/blob/master/src/samples/configuration/web.config for a full list of options
    -->
    <iisnode watchedFiles="web.config;server.js;server-events.js;package.json"
			 node_env="production" />

    <!--<iisnode
    	loggingEnabled="true"
    	devErrorsEnabled="true"
    	logDirectory="iisnode"
    	watchedFiles="*.js;iisnode.yml"
    	nodeProcessCommandLine="&quot;D:\home\site\wwwroot\bin\node.exe&quot;" />-->

  </system.webServer>
</configuration>
