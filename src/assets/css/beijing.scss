/* main.scss */

@import "variables";

html {
	text-rendering: optimizeLegibility;
	font-variant-ligatures: common-ligatures discretionary-ligatures contextual;
	-webkit-font-smoothing: subpixel-antialiased;
	
	@each $msize, $fsize in $font-size {
		@include media($msize) {
			font-size: $fsize;
		}
	}
}

html, body {
	margin:0;
	padding:0;
}

body {
	font-family: $fontStackContent;
	line-height: 1.6;
	color: $colorForeground;
	background-color: $colorBackground;
}

section,
aside { // IE doesn't recognize some HTML5 elements. Make sure they're blocks.
	display: block;
}

p {
	@extend %width-limit;
	
	padding: 0;
}

a {
	&:link,
	&:visited,
	&:hover,
	&:focus,
	&:active {
		color: inherit;
		text-decoration: none;
		border-bottom: 1px solid currentColor;
		cursor: pointer;
	}
}

q:before,
blockquote:before {
	content: '\201c';
}
q:after,
blockquote:after {
	content: '\201d';
}

/* other styles */
aside {
	@extend %width-limit;
	
	box-sizing: border-box;
	padding: 1em 3em;
}

.red,
.blue,
.gray {
	color: $colorSnow;
}
.red { background: $colorRed; }
.blue { background: $colorBlue; }
.dust { background: $colorDust; }
.yellow { background: $colorYellow; }
.gray { background: $colorGray; }

svg {
	// set the default color of the SVG to match the default background
	color: $colorBackground;
	
	.red > & { color: $colorRed; }
	.blue > & { color: $colorBlue; }
	.dust > & { color: $colorDust; }
	.yellow > & { color: $colorYellow; }
	.gray > & { color: $colorGray; }
}

section {
	padding: 0 0 2em;
	
	&:after {
		content: $contentBlank;
		display: block;
		padding-bottom: 25%;
	}
	
	> svg {
		margin-top: -25%;
		// set the width and height for IE and Safari
		width: 100%;
		height: 25vw;
	}
}

.subsection {
	padding: 1em 0 2em;
}

figure {
	@extend %width-limit;
	text-align: center;
}

figcaption {
	font-style: italic;
}

.js .image-container {
	width: 100%;
	height: 0;
	position: relative;
	overflow: hidden;
	padding-bottom: 66.67%;
		
	img {
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
	}
	
	// for portrait 2:3 images
	&.p img {
		left: 27.8%;
		width: 44.4%;
	}
}

.js .image-fig {
	position: relative;
	
	.image-link {
		position: absolute;
		top: 0.5em;
		left: 1em;
	}
	
	nav {
		padding: .5em 0 .1em;
	}
}

.gallery {
	@extend %width-limit;
	
	border: 1px dashed currentColor;
	box-sizing: border-box;
	padding: 0;
	list-style: none;
		
	li {
		margin: 1em 1.2em 1.2em;
	}
	
	.js & {
		border: none;
		
		/* this max width ensures 3 columns of images on large screens 
		as well as screen as narrow as 320px. On the rare even smaller 
		screens, the floated li's will collapse into two (not as pretty
		but functional) 2 columns  */
		max-width: 16.7em;
		
		&:after {
			content: $contentBlank;
			display: block;
			clear: both;
		}
		
		// the span.caption is just for data storage when there is javascript
		.caption {
			display: none;
		}
		
		/* make a grid of thumbnails */
		li {
			float: left;
			width: 5em;
			height: 5em;
			margin: 0.277em;
		}
		
		li img {
			width: 5em;
			height: 5em;
		}
	}
}

@import "nav";
@import "headings";
